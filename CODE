package main

import "fmt"

const NMAX int = 1024

type barber struct {
	nama    string
	tanggal [NMAX]int
	rating  int
	harga   int
}
type Arrint [NMAX]barber

func main() {
	var x, nData int
	var data Arrint
	menu()
	fmt.Scan(&x)
	if x == 1 {
		fmt.Println("Berapa banyak barber yang ingin anda input?")
		fmt.Scan(&nData)
		inputBarber(&data, &nData)
		cetakListBarber(data, nData)
	}
}

func menu() {
	// FS: Mencetak pertanyaan untuk menu awal
	fmt.Println("Siapa anda?", "\n1. Admin", "\n2. Customer")
}

func inputBarber(A *Arrint, n *int) {
	/*
		IS: Array barber A sepanjang n terdefinisi sembarang
		FS: Array Barber A sepanjang n telah terdefinisi
	*/

	if *n > NMAX {
		*n = NMAX
	}

	var i, j, tanggal int

	fmt.Println("Masukkan nama, harga, dan rating barber")
	for i = 0; i < *n; i++ {
		fmt.Scan(&A[i].nama, &A[i].harga, &A[i].rating)
		// fitur untuk input tanggal
		fmt.Println("Masukkan tanggal (masukkan 0 untuk berhenti):")
		j = 0
		for {
			fmt.Scan(&tanggal)
			if tanggal == 0 {
				break
			}
			if j < NMAX {
				A[i].tanggal[j] = tanggal
				j++
			} else {
				fmt.Println("Jumlah tanggal yang dimasukkan telah mencapai batas maksimal.")
				break
			}
		}
	}
}

func cetakListBarber(A Arrint, n int) {
	/*
		IS: Array barber A sepanjang n terdefinisi
		FS: Menampilkan daftar barber
	*/

	var i int
	for i = 0; i < n; i++ {
		fmt.Printf("%d. Nama: %s, Harga: %d, Rating: %d, Tanggal: ", i+1, A[i].nama, A[i].harga, A[i].rating)
		j := 0
		for A[i].tanggal[j] != 0 && j < NMAX {
			fmt.Printf("%d ", A[i].tanggal[j])
			j++
		}
		fmt.Println()
	}
}
