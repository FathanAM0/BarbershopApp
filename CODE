package main

import "fmt"

const NMAX int = 1024

type barber struct {
	nama    string
	tanggal [NMAX]int

	rating int
	harga  int
}
type Arrint [NMAX]barber

var x, nData int
var data Arrint

func main() {

	start()

}

func start() {
	fmt.Println("Siapa anda?", "\n1. Admin", "\n2. Customer")
	fmt.Scan(&x)
	if x == 1 {
		menuAdmin()
	} else if x == 2 {
		menuCustomer()
	} else {
		fmt.Println("masukan tidak valid silahkan pilih kembali")
		start()
	}
}

func menuAdmin() {
	fmt.Println("1. Masukkan data", "\n0. kembali ke menu")
	fmt.Scan(&x)
	if x == 0 {
		start()
	} else if x == 1 {
		fmt.Println("berapa banyak barber yang akan diinput?")
		fmt.Scan(&nData)
		inputBarber(&data, &nData)
		menuAdmin()
	} else {
		fmt.Println("masukan tidak valid silahkan pilih kembali")
		menuAdmin()
	}
}

func menuCustomer() {
	var namaDicari string
	fmt.Println("1. Lihat list barber", "\n2. Cari nama barber")
	fmt.Scan(&x)
	if x == 1 {
		fmt.Println("Berikut adalah list barber kami")
		cetakListBarber(data, nData)

	} else if x == 2 {
		fmt.Println("Masukkan nama yang ingin anda cari")
		fmt.Scan(&namaDicari)
		cariNamaBarber(data, nData, namaDicari)
	} else {
		fmt.Println("masukan tidak valid silahkan pilih kembali")
		menuCustomer()
	}
}

func inputBarber(A *Arrint, n *int) {
	/*
		IS: Array barber A sepanjang n terdefinisi sembarang
		FS: Array Barber A sepanjang n telah terdefinisi
	*/

	if *n > NMAX {
		*n = NMAX
	}

	var i, j, tanggal int

	fmt.Println("Masukkan nama, harga, dan rating barber")
	for i = 0; i < *n; i++ {
		fmt.Scan(&A[i].nama, &A[i].harga, &A[i].rating)

		// fitur untuk input tanggal
		fmt.Println("Masukkan tanggal (masukkan 0 untuk berhenti):")
		j = 0
		for {
			fmt.Scan(&tanggal)
			if tanggal == 0 {
				break
			}
			if j < NMAX {
				A[i].tanggal[j] = tanggal
				j++
			} else {
				fmt.Println("Jumlah tanggal yang dimasukkan telah mencapai batas maksimal.")
				break
			}
		}
		if i < *n-1 {
			fmt.Println("barber berikutnya")
		}
	}

}
func cetakListBarber(A Arrint, n int) {
	/*
		IS: Array barber A sepanjang n terdefinisi
		FS: Menampilkan daftar barber
	*/

	var i int
	for i = 0; i < n; i++ {
		fmt.Printf("%d. Nama: %s, Harga: %d, Rating: %d, Tanggal: ", i+1, A[i].nama, A[i].harga, A[i].rating)
		j := 0
		for A[i].tanggal[j] != 0 && j < NMAX {
			fmt.Printf("%d ", A[i].tanggal[j])
			j++
		}
		fmt.Println()
	}

	booking()

}

func cariNamaBarber(A Arrint, n int, namaBarber string) {
	var found bool
	for i := 0; i < n; i++ {
		if A[i].nama == namaBarber {
			fmt.Printf("Nama: %s, Harga: %d, Rating: %d, Tanggal: ", A[i].nama, A[i].harga, A[i].rating)
			j := 0
			for A[i].tanggal[j] != 0 && j < NMAX {
				fmt.Printf("%d ", A[i].tanggal[j])
				j++
			}
			fmt.Println()
			found = true
		}
	}
	if !found {
		fmt.Println("Barber dengan nama", namaBarber, "tidak ditemukan.")
	}

}

func booking() {
	fmt.Println("Pilihlah pilihan dibawah")
	fmt.Println("1. Booking barber", "\n2. Kembali")
	fmt.Scan(&x)
	if x == 1 {
		fmt.Println("fiturnya belum jadi")
	} else if x == 2 {
		menuCustomer()
	} else {
		fmt.Println("masukan tidak valid silahkan pilih kembali")
		booking()
	}
}

func filterRangeharga() {
	fmt.Println("Pilih rentang harga", "\n1. < 50k", "\n2. 50k - 100k", "\n3. 100k - 150k", "\n4. > 150k")

}
func filterRating() {}
